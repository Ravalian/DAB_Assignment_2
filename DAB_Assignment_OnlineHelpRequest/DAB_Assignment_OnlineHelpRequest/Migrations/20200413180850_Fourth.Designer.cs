// <auto-generated />
using DAB_Assignment_OnlineHelpRequest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAB_Assignment_OnlineHelpRequest.Migrations
{
    [DbContext(typeof(myDbContext))]
    [Migration("20200413180850_Fourth")]
    partial class Fourth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Assignment", b =>
                {
                    b.Property<string>("lecture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeacherAUid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("courseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("helpwhere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lecture", "number");

                    b.HasIndex("TeacherAUid");

                    b.HasIndex("courseId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Attends", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Semester")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Attends");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Course", b =>
                {
                    b.Property<string>("courseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("courseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Exercise", b =>
                {
                    b.Property<string>("lecture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("number")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentAUid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeacherAUid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("courseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("helpwhere")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lecture", "number");

                    b.HasIndex("StudentAUid");

                    b.HasIndex("TeacherAUid");

                    b.HasIndex("courseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.RequestHelpAssignments", b =>
                {
                    b.Property<string>("AssignmentLecture")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AssignmentNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Isactive")
                        .HasColumnType("bit");

                    b.HasKey("AssignmentLecture", "AssignmentNumber", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("RequestHelpAssignments");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Student", b =>
                {
                    b.Property<string>("StudentAUid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentAUid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Teacher", b =>
                {
                    b.Property<string>("TeacherAUid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TeacherAUid");

                    b.HasIndex("courseId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Assignment", b =>
                {
                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Teacher", "Teacher")
                        .WithMany("TeacherAssignments")
                        .HasForeignKey("TeacherAUid");

                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Course", "Course")
                        .WithMany("CourseAssignments")
                        .HasForeignKey("courseId");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Attends", b =>
                {
                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Course", "Course")
                        .WithMany("Attends")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Student", "Student")
                        .WithMany("Attends")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Exercise", b =>
                {
                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Student", "student")
                        .WithMany("StudentExercises")
                        .HasForeignKey("StudentAUid");

                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Teacher", "Teacher")
                        .WithMany("TeacherExercises")
                        .HasForeignKey("TeacherAUid");

                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Course", "Course")
                        .WithMany("CourseExercises")
                        .HasForeignKey("courseId");
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.RequestHelpAssignments", b =>
                {
                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Student", "Student")
                        .WithMany("RequestHelpAssignments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Assignment", "Assignment")
                        .WithMany("RequestHelpAssignmentses")
                        .HasForeignKey("AssignmentLecture", "AssignmentNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAB_Assignment_OnlineHelpRequest.Models.Teacher", b =>
                {
                    b.HasOne("DAB_Assignment_OnlineHelpRequest.Models.Course", "Course")
                        .WithMany("CourseTeachers")
                        .HasForeignKey("courseId");
                });
#pragma warning restore 612, 618
        }
    }
}
